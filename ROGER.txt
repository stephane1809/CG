double bodyRadius = 83.3;
Eigen::Vector3d bodyCenter(0, -83.3, -1100);
Eigen::Vector3d bodyKAmbient(1, 1, 1);
Eigen::Vector3d bodyKDif(1, 1, 1);
Eigen::Vector3d bodyKEsp(0, 0, 0);
Object* body = new Sphere(bodyRadius, bodyCenter, bodyKAmbient, bodyKDif, bodyKEsp, 0);

double headRadius = 62.5;
Eigen::Vector3d headCenter(0, 29.17, -1100);
Eigen::Vector3d headKAmbient(1, 1, 1);
Eigen::Vector3d headKDif(1, 1, 1);
Eigen::Vector3d headKEsp(0, 0, 0);
Object* head = new Sphere(headRadius, headCenter, headKAmbient, headKDif, headKEsp, 0);

double leftEyeRadius = 16.7;
Eigen::Vector3d leftEyeCenter(-29.17, 45.8, -1045);
Eigen::Vector3d leftEyeKAmbient(0, 0.4, 1);
Eigen::Vector3d leftEyeKDif(0, 0.4, 1);
Eigen::Vector3d leftEyeKEsp(0.3, 0.3, 0.3);
Object* leftEye = new Sphere(leftEyeRadius, leftEyeCenter, leftEyeKAmbient, leftEyeKDif, leftEyeKEsp, 4);

double rightEyeRadius = 16.7;
Eigen::Vector3d rightEyeCenter(29.17, 45.8, -1045);
Eigen::Vector3d rightEyeKAmbient(0, 0.4, 1);
Eigen::Vector3d rightEyeKDif(0, 0.4, 1);
Eigen::Vector3d rightEyeKEsp(0.3, 0.3, 0.3);
Object* rightEye = new Sphere(rightEyeRadius, rightEyeCenter, rightEyeKAmbient, rightEyeKDif, rightEyeKEsp, 4);
	
double upperRightMouthRadius = 8.3;
Eigen::Vector3d upperRightMouthCenter(-26.7, 12.5, -1005);
Eigen::Vector3d upperRightMouthKAmbient(0.4, 0.2, 0);
Eigen::Vector3d upperRightMouthKDif(0.4, 0.2, 0);
Eigen::Vector3d upperRightMouthKEsp(0, 0, 0);
Object* upperRightMouth = new Sphere(upperRightMouthRadius, upperRightMouthCenter, upperRightMouthKAmbient, upperRightMouthKDif, upperRightMouthKEsp, 0);

double rightMouthRadius = 8.3;
Eigen::Vector3d rightMouthCenter(-10, 4.17, -1005);
Eigen::Vector3d rightMouthKAmbient(0.4, 0.2, 0);
Eigen::Vector3d rightMouthKDif(0.4, 0.2, 0);
Eigen::Vector3d rightMouthKEsp(0, 0, 0);
Object* rightMouth = new Sphere(rightMouthRadius, rightMouthCenter, rightMouthKAmbient, rightMouthKDif, rightMouthKEsp, 0);

double leftMouthRadius = 8.3;
Eigen::Vector3d leftMouthCenter(10, 4.17, -1005);
Eigen::Vector3d leftMouthKAmbient(0.4, 0.2, 0);
Eigen::Vector3d leftMouthKDif(0.4, 0.2, 0);
Eigen::Vector3d leftMouthKEsp(0, 0, 0);
Object* leftMouth = new Sphere(leftMouthRadius, leftMouthCenter, leftMouthKAmbient, leftMouthKDif, leftMouthKEsp, 0);

double upperLeftMouthRadius = 8.3;
Eigen::Vector3d upperLeftMouthCenter(26.7, 12.5, -1005);
Eigen::Vector3d upperLeftMouthKAmbient(0.4, 0.2, 0);
Eigen::Vector3d upperLeftMouthKDif(0.4, 0.2, 0);
Eigen::Vector3d upperLeftMouthKEsp(0, 0, 0);
Object* upperLeftMouth = new Sphere(upperLeftMouthRadius, upperLeftMouthCenter, upperLeftMouthKAmbient, upperLeftMouthKDif, upperLeftMouthKEsp, 0);

double hatBaseRadius = 80;
Eigen::Vector3d hatBaseCenterBase(0, 64, -1100);
Eigen::Vector3d hatBaseCenterTop(-2.352, 75.768, -1100);
Eigen::Vector3d hatBaseKAmbient(0.2, 0.2, 0.2);
Eigen::Vector3d hatBaseKDif(0.2, 0.2, 0.2);
Eigen::Vector3d hatBaseKEsp(0, 0, 0);
Object* hatBase = new Cilinder(hatBaseRadius, hatBaseCenterBase, hatBaseCenterTop, hatBaseKAmbient, hatBaseKDif, hatBaseKEsp, 0);

double hatTopRadius = 64;
Eigen::Vector3d hatTopCenterBase(-2.352, 75.768, -1100);
Eigen::Vector3d hatTopCenterTop(-11.768, 122.832, -1100);
Eigen::Vector3d hatTopKAmbient(0.2, 0.2, 0.2);
Eigen::Vector3d hatTopKDif(0.2, 0.2, 0.2);
Eigen::Vector3d hatTopKEsp(0, 0, 0);
Object* hatTop = new Cilinder(hatTopRadius, hatTopCenterBase, hatTopCenterTop, hatTopKAmbient, hatTopKDif, hatTopKEsp, 0);


double angle = 0.4;
Eigen::Vector3d centerBase(0, -75, -1100);
Eigen::Vector3d vertex(0, 75, -1100);
Eigen::Vector3d coneKAmbient(0.2, 0.5, 0.25);
Eigen::Vector3d coneKDif(0.2, 0.5, 0.25);
Eigen::Vector3d coneKEsp(0, 0, 0);
int coneSpecularIndex = 0;
Object* cone = new Cone(angle, centerBase, vertex, coneKAmbient, coneKDif, coneKEsp, coneSpecularIndex);

double woodRadius = 20;
Eigen::Vector3d woodCenterBase(0, -200, -1100);
Eigen::Vector3d woodCenterTop(0, -75, -1100);
Eigen::Vector3d woodKAmbient(0.62, 0.33, 0.07);
Eigen::Vector3d woodKDif(0.62, 0.33, 0.07);
Eigen::Vector3d woodKEsp(0, 0, 0);
Object* wood = new Cilinder(woodRadius, woodCenterBase, woodCenterTop, woodKAmbient, woodKDif, woodKEsp, 0);

Eigen::Vector3d floorNormal(0, 1, 0);
Eigen::Vector3d floorCenter(0, -200, 0);
Eigen::Vector3d floorKAmbient(0.2, 0.7, 0.2);
Eigen::Vector3d floorKDif(0.2, 0.7, 0.2);
Eigen::Vector3d floorKEsp(0, 0, 0);
int floorSpecularIndex = 0;
Object* floor = new Plane(floorNormal, floorCenter, floorKAmbient, floorKDif, floorKEsp, floorSpecularIndex);

Eigen::Vector3d wallNormal(0, 0, 1);
Eigen::Vector3d wallCenter(0, 0, -2000);
Eigen::Vector3d wallKAmbient(0, 0.5, 0.8);
Eigen::Vector3d wallKDif(0, 0.5, 0.8);
Eigen::Vector3d wallKEsp(0, 0, 0);
int wallSpecularIndex = 0;
Object* wall = new Plane(wallNormal, wallCenter, wallKAmbient, wallKDif, wallKEsp, wallSpecularIndex);